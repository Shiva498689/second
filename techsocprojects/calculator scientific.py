import time
import math


time.sleep(1)
s= input("input  :")

if(s[0:3]=="exp"):
   num1=float(s[4:(len(s)-1)])
   print("Output :",(2.7182818285**num1))

if(s[0:3]=="sin"):
   x= (float(s[4:(len(s)-1)]))*(math.pi/180)
   t=1.0
   ms=0.0
   for i in range(1,51):
      for j in range (1,2*i):
         t*=j
      ms+=((-1)**(i+1))*(( (x)**(2*i-1))/t)
      t=1
   print(f"sin({x})= ",ms)
   exit()
if(s[0:3]=="tan"):
   x= (float(s[4:(len(s)-1)]))*(math.pi/180)
   t=1.0
   ms=0.0
   for i in range(1,51):
      for j in range (1,2*i):
         t*=j

      ms+=((-1)**(i+1))*(( (x)**(2*i-1))/t)
      t=1
   if(s[4:(len(s)-1)]=="90"):
     ms=int(ms)
   cos=(1-(ms**2))**(1/2)
   print(f"tan({x})= ",(ms/cos))
   exit()
if(s[0:3]=="cos"):
   x= (float(s[4:(len(s)-1)]))*(math.pi/180)
   t=1.0
   ms=0.0
   for i in range(1,51):
      for j in range (1,2*i):
         t*=j

      ms+=((-1)**(i+1))*(( (x)**(2*i-1))/t)
      t=1
   if(s[4:(len(s)-1)]=="90"):
     ms=int(ms)
   cos=(1-(ms**2))**(1/2)
   print(f"cos({x})= ",cos)
   exit()


if(s[0:4]=="asin"):
   x= float(s[5:(len(s)-1)])
   # please ignore this this is just a maclaurin series 
   arcsin_x = (
    (1.0) * x**1 +
    (0.16666666666666666) * x**3 +
    (0.075) * x**5 +
    (0.044642857142857144) * x**7 +
    (0.030381944444444444) * x**9 +
    (0.022372159090909092) * x**11 +
    (0.017352764423076924) * x**13 +
    (0.01396484375) * x**15 +
    (0.011551800896139705) * x**17 +
    (0.009761609529194078) * x**19 +
    (0.008390335809616815) * x**21 +
    (0.0073125258735988454) * x**23 +
    (0.006447210311889649) * x**25 +
    (0.005740037670841924) * x**27 +
    (0.005153309682319905) * x**29 +
    (0.004660143486915096) * x**31 +
    (0.004240907093679363) * x**33 +
    (0.003880964558837669) * x**35 +
    (0.0035692053938259347) * x**37 +
    (0.003297059503473485) * x**39 +
    (0.0030578216492580306) * x**41 +
    (0.002846178401108942) * x**43 +
    (0.00265787063820729) * x**45 +
    (0.0024894486782468836) * x**47 +
    (0.002338091892111975) * x**49 +
    (0.0022014739737101384) * x**51 +
    (0.0020776610325181676) * x**53 +
    (0.0019650336162772837) * x**55 +
    (0.0018622264064031275) * x**57 +
    (0.0017680811205154183) * x**59 +
    (0.0016816093935831068) * x**61 +
    (0.001601963275351444) * x**63 +
    (0.0015284115961225677) * x**65 +
    (0.0014603208940791154) * x**67 +
    (0.0013971399176302534) * x**69 +
    (0.0013383869512751784) * x**71 +
    (0.0012836393876290285) * x**73 +
    (0.001232525098500017) * x**75 +
    (0.0011847152561624392) * x**77 +
    (0.0011399183307022236) * x**79 +
    (0.0010978750465914472) * x**81 +
    (0.0010583541258722428) * x**83 +
    (0.0010211486797106276) * x**85 +
    (0.0009860731369833312) * x**87 +
    (0.0009529606197429564) * x**89 +
    (0.0009216606921836334) * x**91 +
    (0.0008920374230917097) * x**93 +
    (0.0008639677124658675) * x**95 +
    (0.0008373398416027121) * x**97 +
    (0.0008120522129086701) * x**99
)# please dont mind its just maclaurin series generated by chat gpt
   if(x==1):
       print("Output : 90.00 degrees")
       exit()
   print("Output :",((arcsin_x)/math.pi)*180,"degrees")
   exit()


if(s[0:4]=="acos"):
   x= float(s[5:(len(s)-1)])
   # please ignore this this is just a maclaurin series
   arcsin_x = (
    (1.0) * x**1 +
    (0.16666666666666666) * x**3 +
    (0.075) * x**5 +
    (0.044642857142857144) * x**7 +
    (0.030381944444444444) * x**9 +
    (0.022372159090909092) * x**11 +
    (0.017352764423076924) * x**13 +
    (0.01396484375) * x**15 +
    (0.011551800896139705) * x**17 +
    (0.009761609529194078) * x**19 +
    (0.008390335809616815) * x**21 +
    (0.0073125258735988454) * x**23 +
    (0.006447210311889649) * x**25 +
    (0.005740037670841924) * x**27 +
    (0.005153309682319905) * x**29 +
    (0.004660143486915096) * x**31 +
    (0.004240907093679363) * x**33 +
    (0.003880964558837669) * x**35 +
    (0.0035692053938259347) * x**37 +
    (0.003297059503473485) * x**39 +
    (0.0030578216492580306) * x**41 +
    (0.002846178401108942) * x**43 +
    (0.00265787063820729) * x**45 +
    (0.0024894486782468836) * x**47 +
    (0.002338091892111975) * x**49 +
    (0.0022014739737101384) * x**51 +
    (0.0020776610325181676) * x**53 +
    (0.0019650336162772837) * x**55 +
    (0.0018622264064031275) * x**57 +
    (0.0017680811205154183) * x**59 +
    (0.0016816093935831068) * x**61 +
    (0.001601963275351444) * x**63 +
    (0.0015284115961225677) * x**65 +
    (0.0014603208940791154) * x**67 +
    (0.0013971399176302534) * x**69 +
    (0.0013383869512751784) * x**71 +
    (0.0012836393876290285) * x**73 +
    (0.001232525098500017) * x**75 +
    (0.0011847152561624392) * x**77 +
    (0.0011399183307022236) * x**79 +
    (0.0010978750465914472) * x**81 +
    (0.0010583541258722428) * x**83 +
    (0.0010211486797106276) * x**85 +
    (0.0009860731369833312) * x**87 +
    (0.0009529606197429564) * x**89 +
    (0.0009216606921836334) * x**91 +
    (0.0008920374230917097) * x**93 +
    (0.0008639677124658675) * x**95 +
    (0.0008373398416027121) * x**97 +
    (0.0008120522129086701) * x**99 )
   
   arccos= math.pi/2 - arcsin_x
   print("Output :",((arccos)/(math.pi))*180,"degrees")
   exit()


if(s[0:4]=="atan"):
   x= float(s[5:(len(s)-1)])
   atan= x - x**3/3 + x**5/5 - x**7/7 + x**9/9 - x**11/11 + x**13/13 - x**15/15 + x**17/17 - x**19/19 + x**21/21 - x**23/23 + x**25/25 - x**27/27 + x**29/29
   
   print("Output :",((atan)/math.pi)*180,"degrees")
   exit()
if(s[0:2]=="ln"):
  x= float((s[3:(len(s)-1)]))
  ln=math.log(x) 
  print("Output: ",ln)
  exit()

elif(s[0]=="0"or s[0]=="1"or s[0]=="2"or s[0]=="3"or s[0]=="4"or s[0]=="5"or s[0]=="6"or s[0]=="7"or s[0]=="8"or s[0]=="9"):
 len=len(s)
 if(s[len-1]=="0"or s[len-1]=="1"or s[len-1]=="2"or s[len-1]=="3"or s[len-1]=="4"or s[len-1]=="5"or s[len-1]=="6"or s[len-1]=="7"or s[len-1]=="8"or s[len-1]=="9"):
   

                          i= s.find(" ")
                          num1= float(s[0:i])
                          num2= float(s[i+3:len(s)])
                          operator= s[i+1:i+2]
 
                          if(operator=='+'):
                             print("output :",(num1+num2))
                          elif(operator=='-'):
                             print("output :",(num1-num2))
                          elif(operator=='*'):
                             print("output :",(num1*num2))
                          elif(operator=='/'):
                             print("output :",(num1/num2))
                          elif(operator=='%'):
                             print("output :",(num1%num2))
                          elif(operator=='^'):
                             print("output :",(num1**num2))
else:
    print('please read the guidelines at Read.md and than retry')                              